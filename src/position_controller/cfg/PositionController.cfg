#!/usr/bin/env python
PACKAGE = "position_controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("max_forward_linear_velocity", double_t, 0, "Max Forward Linear Velocity",        0.15, 0.0,   0.5)
gen.add("max_lateral_linear_velocity", double_t, 0, "Max Lateral Linear Velocity",        0.05, 0.0,   0.2)
gen.add("max_angular_velocity", double_t, 0, "Max Angular Velocity",       0.2, 0.0,   0.4)
gen.add("max_turning_linear_velocity", double_t, 0, "Max Turning Linear Velocity",        0.07, 0.0,   0.2)
gen.add("angular_gain_p", double_t, 0, "Angular Proportional Gain",        0.5, 0.0,   1)
gen.add("goal_distance_threshold", double_t, 0, "Goal Distance Threshold", 0.1, 0.0,   1)
gen.add("goal_heading_threshold", double_t, 0, "Goal Heading Threshold",   0.1, 0.0,   1)
gen.add("turn_to_face_heading_threshold", double_t, 0, "Turn to Face Heading Threshold",   0.2, 0.0,   0.4)

goal_behind_mode_enum = gen.enum([ gen.const("ignore",      int_t, 0, "ignore"),
                       gen.const("backwards",     int_t, 1, "backwards"),
                       gen.const("turnaround",     int_t, 2, "turnaround")],
                     "Goal Behind Mode")
gen.add("goal_behind_mode", int_t, 0, "How to deal with goals behind the robot", 1, 0, 2, edit_method=goal_behind_mode_enum)

motion_mode_enum = gen.enum([ gen.const("turnwalkturn",      int_t, 0, "turnwalkturn"),
                       gen.const("shuffle",     int_t, 1, "shuffle")],
                     "Motion Mode")
gen.add("motion_mode", int_t, 0, "How to move: turnwalkturn or shuffle", 0, 0, 1, edit_method=motion_mode_enum)

gen.add("trackline_gain_p",   double_t,   0, "Trackline Gain",  0.0, 1.0, 0.5)
gen.add("back_is_front",   bool_t,   0, "Back is front", True)
gen.add("yaw_exclusive_turns",   bool_t,   0, "Yaw exclusive turns", True)
gen.add("ignore_intermediate_goal_heading",   bool_t,   0, "Ignore intermediate goal heading", True)
exit(gen.generate(PACKAGE, "position_controller", "PositionController"))
